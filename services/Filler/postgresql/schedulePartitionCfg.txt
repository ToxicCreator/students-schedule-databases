CREATE index IF NOT EXISTS scheduleDate on schedule (date);

CREATE TABLE IF NOT EXISTS schedule1  (CHECK (date_part('month', date) = 1))  INHERITS (schedule);
CREATE TABLE IF NOT EXISTS schedule2  (CHECK (date_part('month', date) = 2))  INHERITS (schedule);
CREATE TABLE IF NOT EXISTS schedule3  (CHECK (date_part('month', date) = 3))  INHERITS (schedule);
CREATE TABLE IF NOT EXISTS schedule4  (CHECK (date_part('month', date) = 4))  INHERITS (schedule);
CREATE TABLE IF NOT EXISTS schedule5  (CHECK (date_part('month', date) = 5))  INHERITS (schedule);
CREATE TABLE IF NOT EXISTS schedule6  (CHECK (date_part('month', date) = 6))  INHERITS (schedule);
CREATE TABLE IF NOT EXISTS schedule7  (CHECK (date_part('month', date) = 7))  INHERITS (schedule);
CREATE TABLE IF NOT EXISTS schedule8  (CHECK (date_part('month', date) = 8))  INHERITS (schedule);
CREATE TABLE IF NOT EXISTS schedule9  (CHECK (date_part('month', date) = 9))  INHERITS (schedule);
CREATE TABLE IF NOT EXISTS schedule10 (CHECK (date_part('month', date) = 10)) INHERITS (schedule);
CREATE TABLE IF NOT EXISTS schedule11 (CHECK (date_part('month', date) = 11)) INHERITS (schedule);
CREATE TABLE IF NOT EXISTS schedule12 (CHECK (date_part('month', date) = 12)) INHERITS (schedule);

CREATE OR REPLACE FUNCTION schedulePartitionInsert()
  RETURNS trigger AS
$$
DECLARE
    partitionName text;

BEGIN
    partitionName := format( 'schedule%s', date_part( 'month', NEW.date)::integer );
    execute 'INSERT INTO ' || partitionName || ' VALUES ( ($1).* )' USING NEW;
    RETURN null;
END;
$$
LANGUAGE 'plpgsql';

create or replace trigger schedulePartition before insert on schedule for each row execute procedure schedulePartitionInsert();